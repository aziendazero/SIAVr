'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
'
Namespace wsPS
    
    'CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.develop.com/web/services/' was not handled.
    'CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.develop.com/web/services/' was not handled.
    'CODEGEN: The optional WSDL extension element 'validation' from namespace 'http://www.develop.com/web/services/' was not handled.
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WsPSSoap", [Namespace]:="http://example.org/wsps"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Testata))>  _
    Partial Public Class WsPS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RichiestaConsulenzeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InvioRefertiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPazCodiceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Onit.OnAssistnet.OnVac.My.MySettings.Default.Onit_OnAssistnet_OnVac_Web_wsPS_WsPS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RichiestaConsulenzeCompleted As RichiestaConsulenzeCompletedEventHandler
        
        '''<remarks/>
        Public Event InvioRefertiCompleted As InvioRefertiCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPazCodiceCompleted As GetPazCodiceCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://example.org/wsps/RichiestaConsulenze", RequestNamespace:="http://example.org/wsps", ResponseNamespace:="http://example.org/wsps", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RichiestaConsulenze(ByVal params As Richiesta) As ReturnValue
            Dim results() As Object = Me.Invoke("RichiestaConsulenze", New Object() {params})
            Return CType(results(0),ReturnValue)
        End Function
        
        '''<remarks/>
        Public Function BeginRichiestaConsulenze(ByVal params As Richiesta, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RichiestaConsulenze", New Object() {params}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRichiestaConsulenze(ByVal asyncResult As System.IAsyncResult) As ReturnValue
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnValue)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RichiestaConsulenzeAsync(ByVal params As Richiesta)
            Me.RichiestaConsulenzeAsync(params, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RichiestaConsulenzeAsync(ByVal params As Richiesta, ByVal userState As Object)
            If (Me.RichiestaConsulenzeOperationCompleted Is Nothing) Then
                Me.RichiestaConsulenzeOperationCompleted = AddressOf Me.OnRichiestaConsulenzeOperationCompleted
            End If
            Me.InvokeAsync("RichiestaConsulenze", New Object() {params}, Me.RichiestaConsulenzeOperationCompleted, userState)
        End Sub
        
        Private Sub OnRichiestaConsulenzeOperationCompleted(ByVal arg As Object)
            If (Not (Me.RichiestaConsulenzeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RichiestaConsulenzeCompleted(Me, New RichiestaConsulenzeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://example.org/wsps/InvioReferti", RequestNamespace:="http://example.org/wsps", ResponseNamespace:="http://example.org/wsps", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InvioReferti(ByVal referti() As Referto) As ReturnValue
            Dim results() As Object = Me.Invoke("InvioReferti", New Object() {referti})
            Return CType(results(0),ReturnValue)
        End Function
        
        '''<remarks/>
        Public Function BeginInvioReferti(ByVal referti() As Referto, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InvioReferti", New Object() {referti}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInvioReferti(ByVal asyncResult As System.IAsyncResult) As ReturnValue
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ReturnValue)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InvioRefertiAsync(ByVal referti() As Referto)
            Me.InvioRefertiAsync(referti, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InvioRefertiAsync(ByVal referti() As Referto, ByVal userState As Object)
            If (Me.InvioRefertiOperationCompleted Is Nothing) Then
                Me.InvioRefertiOperationCompleted = AddressOf Me.OnInvioRefertiOperationCompleted
            End If
            Me.InvokeAsync("InvioReferti", New Object() {referti}, Me.InvioRefertiOperationCompleted, userState)
        End Sub
        
        Private Sub OnInvioRefertiOperationCompleted(ByVal arg As Object)
            If (Not (Me.InvioRefertiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InvioRefertiCompleted(Me, New InvioRefertiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://example.org/wsps/GetPazCodice", RequestNamespace:="http://example.org/wsps", ResponseNamespace:="http://example.org/wsps", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPazCodice(ByVal codTerminale As String, ByVal codPresidio As String) As String
            Dim results() As Object = Me.Invoke("GetPazCodice", New Object() {codTerminale, codPresidio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPazCodice(ByVal codTerminale As String, ByVal codPresidio As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPazCodice", New Object() {codTerminale, codPresidio}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPazCodice(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPazCodiceAsync(ByVal codTerminale As String, ByVal codPresidio As String)
            Me.GetPazCodiceAsync(codTerminale, codPresidio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPazCodiceAsync(ByVal codTerminale As String, ByVal codPresidio As String, ByVal userState As Object)
            If (Me.GetPazCodiceOperationCompleted Is Nothing) Then
                Me.GetPazCodiceOperationCompleted = AddressOf Me.OnGetPazCodiceOperationCompleted
            End If
            Me.InvokeAsync("GetPazCodice", New Object() {codTerminale, codPresidio}, Me.GetPazCodiceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPazCodiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPazCodiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPazCodiceCompleted(Me, New GetPazCodiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://example.org/wsps")>  _
    Partial Public Class Richiesta
        Inherits Testata
        
        Private fieldField As String
        
        Private codUnitaField As String
        
        '''<remarks/>
        Public Property Field() As String
            Get
                Return Me.fieldField
            End Get
            Set
                Me.fieldField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodUnita() As String
            Get
                Return Me.codUnitaField
            End Get
            Set
                Me.codUnitaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(Referto)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Richiesta)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://example.org/wsps")>  _
    Partial Public Class Testata
        
        Private sendingDomainField As String
        
        Private operationDateField As Date
        
        '''<remarks/>
        Public Property SendingDomain() As String
            Get
                Return Me.sendingDomainField
            End Get
            Set
                Me.sendingDomainField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OperationDate() As Date
            Get
                Return Me.operationDateField
            End Get
            Set
                Me.operationDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://example.org/wsps")>  _
    Partial Public Class ReturnValue
        
        Private ackCodeField As String
        
        Private errorCodeField As String
        
        Private errorMessageField As String
        
        Private dsRispostaField As ADVICES
        
        '''<remarks/>
        Public Property AckCode() As String
            Get
                Return Me.ackCodeField
            End Get
            Set
                Me.ackCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCode() As String
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DsRisposta() As ADVICES
            Get
                Return Me.dsRispostaField
            End Get
            Set
                Me.dsRispostaField = value
            End Set
        End Property
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("ADVICES"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet"),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")>  _
    Partial Public Class ADVICES
        Inherits Global.System.Data.DataSet
        
        Private tableADVICE As ADVICEDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("ADVICE")) Is Nothing) Then
                    MyBase.Tables.Add(New ADVICEDataTable(ds.Tables("ADVICE")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property ADVICE() As ADVICEDataTable
            Get
                Return Me.tableADVICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As ADVICES = CType(MyBase.Clone,ADVICES)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("ADVICE")) Is Nothing) Then
                    MyBase.Tables.Add(New ADVICEDataTable(ds.Tables("ADVICE")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableADVICE = CType(MyBase.Tables("ADVICE"),ADVICEDataTable)
            If (initTable = true) Then
                If (Not (Me.tableADVICE) Is Nothing) Then
                    Me.tableADVICE.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "ADVICES"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/Consulenze.xsd"
            Me.Locale = New Global.System.Globalization.CultureInfo("it-IT")
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableADVICE = New ADVICEDataTable()
            MyBase.Tables.Add(Me.tableADVICE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeADVICE() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As ADVICES = New ADVICES()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub ADVICERowChangeEventHandler(ByVal sender As Object, ByVal e As ADVICERowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class ADVICEDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnSCHEDA As Global.System.Data.DataColumn
            
            Private columnPRESIDIO As Global.System.Data.DataColumn
            
            Private columnCODICEPRESTAZIONE As Global.System.Data.DataColumn
            
            Private columnTIPOPRESTAZIONE As Global.System.Data.DataColumn
            
            Private columnSESSIONE As Global.System.Data.DataColumn
            
            Private columnDATARICHIESTA As Global.System.Data.DataColumn
            
            Private columnDESCRIZIONEPRESTAZIONE As Global.System.Data.DataColumn
            
            Private columnDMPRESTAZIONE As Global.System.Data.DataColumn
            
            Private columnCODICEPAZIENTE As Global.System.Data.DataColumn
            
            Private columnCOGNOMENOME As Global.System.Data.DataColumn
            
            Private columnDATANASCITA As Global.System.Data.DataColumn
            
            Private columnAMBULATORIOPS As Global.System.Data.DataColumn
            
            Private columnURGENZATRIAGE As Global.System.Data.DataColumn
            
            Private columnMEDICORICHIEDENTE As Global.System.Data.DataColumn
            
            Private columnPSRICHIEDENTE As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "ADVICE"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SCHEDAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSCHEDA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PRESIDIOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPRESIDIO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CODICEPRESTAZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCODICEPRESTAZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property TIPOPRESTAZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTIPOPRESTAZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SESSIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSESSIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DATARICHIESTAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDATARICHIESTA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DESCRIZIONEPRESTAZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDESCRIZIONEPRESTAZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DMPRESTAZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDMPRESTAZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CODICEPAZIENTEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCODICEPAZIENTE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property COGNOMENOMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCOGNOMENOME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DATANASCITAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDATANASCITA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property AMBULATORIOPSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAMBULATORIOPS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property URGENZATRIAGEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnURGENZATRIAGE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MEDICORICHIEDENTEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMEDICORICHIEDENTE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PSRICHIEDENTEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPSRICHIEDENTE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As ADVICERow
                Get
                    Return CType(Me.Rows(index),ADVICERow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ADVICERowChanging As ADVICERowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ADVICERowChanged As ADVICERowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ADVICERowDeleting As ADVICERowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ADVICERowDeleted As ADVICERowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddADVICERow(ByVal row As ADVICERow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddADVICERow(ByVal SCHEDA As String, ByVal PRESIDIO As String, ByVal CODICEPRESTAZIONE As String, ByVal TIPOPRESTAZIONE As String, ByVal SESSIONE As Decimal, ByVal DATARICHIESTA As String, ByVal DESCRIZIONEPRESTAZIONE As String, ByVal DMPRESTAZIONE As String, ByVal CODICEPAZIENTE As String, ByVal COGNOMENOME As String, ByVal DATANASCITA As String, ByVal AMBULATORIOPS As String, ByVal URGENZATRIAGE As Decimal, ByVal MEDICORICHIEDENTE As String, ByVal PSRICHIEDENTE As String) As ADVICERow
                Dim rowADVICERow As ADVICERow = CType(Me.NewRow,ADVICERow)
                Dim columnValuesArray() As Object = New Object() {SCHEDA, PRESIDIO, CODICEPRESTAZIONE, TIPOPRESTAZIONE, SESSIONE, DATARICHIESTA, DESCRIZIONEPRESTAZIONE, DMPRESTAZIONE, CODICEPAZIENTE, COGNOMENOME, DATANASCITA, AMBULATORIOPS, URGENZATRIAGE, MEDICORICHIEDENTE, PSRICHIEDENTE}
                rowADVICERow.ItemArray = columnValuesArray
                Me.Rows.Add(rowADVICERow)
                Return rowADVICERow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As ADVICEDataTable = CType(MyBase.Clone,ADVICEDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New ADVICEDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnSCHEDA = MyBase.Columns("SCHEDA")
                Me.columnPRESIDIO = MyBase.Columns("PRESIDIO")
                Me.columnCODICEPRESTAZIONE = MyBase.Columns("CODICEPRESTAZIONE")
                Me.columnTIPOPRESTAZIONE = MyBase.Columns("TIPOPRESTAZIONE")
                Me.columnSESSIONE = MyBase.Columns("SESSIONE")
                Me.columnDATARICHIESTA = MyBase.Columns("DATARICHIESTA")
                Me.columnDESCRIZIONEPRESTAZIONE = MyBase.Columns("DESCRIZIONEPRESTAZIONE")
                Me.columnDMPRESTAZIONE = MyBase.Columns("DMPRESTAZIONE")
                Me.columnCODICEPAZIENTE = MyBase.Columns("CODICEPAZIENTE")
                Me.columnCOGNOMENOME = MyBase.Columns("COGNOMENOME")
                Me.columnDATANASCITA = MyBase.Columns("DATANASCITA")
                Me.columnAMBULATORIOPS = MyBase.Columns("AMBULATORIOPS")
                Me.columnURGENZATRIAGE = MyBase.Columns("URGENZATRIAGE")
                Me.columnMEDICORICHIEDENTE = MyBase.Columns("MEDICORICHIEDENTE")
                Me.columnPSRICHIEDENTE = MyBase.Columns("PSRICHIEDENTE")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnSCHEDA = New Global.System.Data.DataColumn("SCHEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSCHEDA)
                Me.columnPRESIDIO = New Global.System.Data.DataColumn("PRESIDIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPRESIDIO)
                Me.columnCODICEPRESTAZIONE = New Global.System.Data.DataColumn("CODICEPRESTAZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCODICEPRESTAZIONE)
                Me.columnTIPOPRESTAZIONE = New Global.System.Data.DataColumn("TIPOPRESTAZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTIPOPRESTAZIONE)
                Me.columnSESSIONE = New Global.System.Data.DataColumn("SESSIONE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSESSIONE)
                Me.columnDATARICHIESTA = New Global.System.Data.DataColumn("DATARICHIESTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDATARICHIESTA)
                Me.columnDESCRIZIONEPRESTAZIONE = New Global.System.Data.DataColumn("DESCRIZIONEPRESTAZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDESCRIZIONEPRESTAZIONE)
                Me.columnDMPRESTAZIONE = New Global.System.Data.DataColumn("DMPRESTAZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDMPRESTAZIONE)
                Me.columnCODICEPAZIENTE = New Global.System.Data.DataColumn("CODICEPAZIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCODICEPAZIENTE)
                Me.columnCOGNOMENOME = New Global.System.Data.DataColumn("COGNOMENOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCOGNOMENOME)
                Me.columnDATANASCITA = New Global.System.Data.DataColumn("DATANASCITA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDATANASCITA)
                Me.columnAMBULATORIOPS = New Global.System.Data.DataColumn("AMBULATORIOPS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAMBULATORIOPS)
                Me.columnURGENZATRIAGE = New Global.System.Data.DataColumn("URGENZATRIAGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnURGENZATRIAGE)
                Me.columnMEDICORICHIEDENTE = New Global.System.Data.DataColumn("MEDICORICHIEDENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMEDICORICHIEDENTE)
                Me.columnPSRICHIEDENTE = New Global.System.Data.DataColumn("PSRICHIEDENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPSRICHIEDENTE)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewADVICERow() As ADVICERow
                Return CType(Me.NewRow,ADVICERow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New ADVICERow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(ADVICERow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.ADVICERowChangedEvent) Is Nothing) Then
                    RaiseEvent ADVICERowChanged(Me, New ADVICERowChangeEvent(CType(e.Row,ADVICERow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.ADVICERowChangingEvent) Is Nothing) Then
                    RaiseEvent ADVICERowChanging(Me, New ADVICERowChangeEvent(CType(e.Row,ADVICERow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.ADVICERowDeletedEvent) Is Nothing) Then
                    RaiseEvent ADVICERowDeleted(Me, New ADVICERowChangeEvent(CType(e.Row,ADVICERow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.ADVICERowDeletingEvent) Is Nothing) Then
                    RaiseEvent ADVICERowDeleting(Me, New ADVICERowChangeEvent(CType(e.Row,ADVICERow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveADVICERow(ByVal row As ADVICERow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As ADVICES = New ADVICES()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "ADVICEDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class ADVICERow
            Inherits Global.System.Data.DataRow
            
            Private tableADVICE As ADVICEDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableADVICE = CType(Me.Table,ADVICEDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SCHEDA() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.SCHEDAColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SCHEDA' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.SCHEDAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PRESIDIO() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.PRESIDIOColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PRESIDIO' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.PRESIDIOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CODICEPRESTAZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.CODICEPRESTAZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CODICEPRESTAZIONE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.CODICEPRESTAZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property TIPOPRESTAZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.TIPOPRESTAZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOPRESTAZIONE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.TIPOPRESTAZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SESSIONE() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.SESSIONEColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SESSIONE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.SESSIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DATARICHIESTA() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.DATARICHIESTAColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DATARICHIESTA' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.DATARICHIESTAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DESCRIZIONEPRESTAZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.DESCRIZIONEPRESTAZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIZIONEPRESTAZIONE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.DESCRIZIONEPRESTAZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DMPRESTAZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.DMPRESTAZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DMPRESTAZIONE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.DMPRESTAZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CODICEPAZIENTE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.CODICEPAZIENTEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CODICEPAZIENTE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.CODICEPAZIENTEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property COGNOMENOME() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.COGNOMENOMEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'COGNOMENOME' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.COGNOMENOMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DATANASCITA() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.DATANASCITAColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DATANASCITA' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.DATANASCITAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property AMBULATORIOPS() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.AMBULATORIOPSColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'AMBULATORIOPS' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.AMBULATORIOPSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property URGENZATRIAGE() As Decimal
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.URGENZATRIAGEColumn),Decimal)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'URGENZATRIAGE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.URGENZATRIAGEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MEDICORICHIEDENTE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.MEDICORICHIEDENTEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MEDICORICHIEDENTE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.MEDICORICHIEDENTEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PSRICHIEDENTE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableADVICE.PSRICHIEDENTEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PSRICHIEDENTE' in table 'ADVICE' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableADVICE.PSRICHIEDENTEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSCHEDANull() As Boolean
                Return Me.IsNull(Me.tableADVICE.SCHEDAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSCHEDANull()
                Me(Me.tableADVICE.SCHEDAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPRESIDIONull() As Boolean
                Return Me.IsNull(Me.tableADVICE.PRESIDIOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPRESIDIONull()
                Me(Me.tableADVICE.PRESIDIOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCODICEPRESTAZIONENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.CODICEPRESTAZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCODICEPRESTAZIONENull()
                Me(Me.tableADVICE.CODICEPRESTAZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsTIPOPRESTAZIONENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.TIPOPRESTAZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetTIPOPRESTAZIONENull()
                Me(Me.tableADVICE.TIPOPRESTAZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSESSIONENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.SESSIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSESSIONENull()
                Me(Me.tableADVICE.SESSIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDATARICHIESTANull() As Boolean
                Return Me.IsNull(Me.tableADVICE.DATARICHIESTAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDATARICHIESTANull()
                Me(Me.tableADVICE.DATARICHIESTAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDESCRIZIONEPRESTAZIONENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.DESCRIZIONEPRESTAZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDESCRIZIONEPRESTAZIONENull()
                Me(Me.tableADVICE.DESCRIZIONEPRESTAZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDMPRESTAZIONENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.DMPRESTAZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDMPRESTAZIONENull()
                Me(Me.tableADVICE.DMPRESTAZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCODICEPAZIENTENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.CODICEPAZIENTEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCODICEPAZIENTENull()
                Me(Me.tableADVICE.CODICEPAZIENTEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCOGNOMENOMENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.COGNOMENOMEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCOGNOMENOMENull()
                Me(Me.tableADVICE.COGNOMENOMEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDATANASCITANull() As Boolean
                Return Me.IsNull(Me.tableADVICE.DATANASCITAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDATANASCITANull()
                Me(Me.tableADVICE.DATANASCITAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsAMBULATORIOPSNull() As Boolean
                Return Me.IsNull(Me.tableADVICE.AMBULATORIOPSColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetAMBULATORIOPSNull()
                Me(Me.tableADVICE.AMBULATORIOPSColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsURGENZATRIAGENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.URGENZATRIAGEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetURGENZATRIAGENull()
                Me(Me.tableADVICE.URGENZATRIAGEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsMEDICORICHIEDENTENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.MEDICORICHIEDENTEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetMEDICORICHIEDENTENull()
                Me(Me.tableADVICE.MEDICORICHIEDENTEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPSRICHIEDENTENull() As Boolean
                Return Me.IsNull(Me.tableADVICE.PSRICHIEDENTEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPSRICHIEDENTENull()
                Me(Me.tableADVICE.PSRICHIEDENTEColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class ADVICERowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As ADVICERow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As ADVICERow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As ADVICERow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://example.org/wsps")>  _
    Partial Public Class Referto
        Inherits Testata
        
        Private presidioField As String
        
        Private schedaField As String
        
        Private codicePrestazioneField As String
        
        Private tipoPrestazioneField As String
        
        Private sessioneField As String
        
        Private luogoErogazioneField As String
        
        Private referto1Field As String
        
        Private dataRefertoField As String
        
        Private medicoRichiedenteField As String
        
        Private medicoRefertanteField As String
        
        '''<remarks/>
        Public Property Presidio() As String
            Get
                Return Me.presidioField
            End Get
            Set
                Me.presidioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Scheda() As String
            Get
                Return Me.schedaField
            End Get
            Set
                Me.schedaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodicePrestazione() As String
            Get
                Return Me.codicePrestazioneField
            End Get
            Set
                Me.codicePrestazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoPrestazione() As String
            Get
                Return Me.tipoPrestazioneField
            End Get
            Set
                Me.tipoPrestazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Sessione() As String
            Get
                Return Me.sessioneField
            End Get
            Set
                Me.sessioneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LuogoErogazione() As String
            Get
                Return Me.luogoErogazioneField
            End Get
            Set
                Me.luogoErogazioneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Referto")>  _
        Public Property Referto1() As String
            Get
                Return Me.referto1Field
            End Get
            Set
                Me.referto1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataReferto() As String
            Get
                Return Me.dataRefertoField
            End Get
            Set
                Me.dataRefertoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MedicoRichiedente() As String
            Get
                Return Me.medicoRichiedenteField
            End Get
            Set
                Me.medicoRichiedenteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MedicoRefertante() As String
            Get
                Return Me.medicoRefertanteField
            End Get
            Set
                Me.medicoRefertanteField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RichiestaConsulenzeCompletedEventHandler(ByVal sender As Object, ByVal e As RichiestaConsulenzeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RichiestaConsulenzeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnValue
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnValue)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InvioRefertiCompletedEventHandler(ByVal sender As Object, ByVal e As InvioRefertiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InvioRefertiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ReturnValue
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ReturnValue)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetPazCodiceCompletedEventHandler(ByVal sender As Object, ByVal e As GetPazCodiceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPazCodiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
