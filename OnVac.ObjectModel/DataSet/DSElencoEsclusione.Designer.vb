'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataSet
    
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("DSElencoEsclusione"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
    Partial Public Class DSElencoEsclusione
        Inherits Global.System.Data.DataSet
        
        Private tableElencoEsclusione As ElencoEsclusioneDataTable
        
        Private tableRiassuntoEsclusione As RiassuntoEsclusioneDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("ElencoEsclusione")) Is Nothing) Then
                    MyBase.Tables.Add(New ElencoEsclusioneDataTable(ds.Tables("ElencoEsclusione")))
                End If
                If (Not (ds.Tables("RiassuntoEsclusione")) Is Nothing) Then
                    MyBase.Tables.Add(New RiassuntoEsclusioneDataTable(ds.Tables("RiassuntoEsclusione")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property ElencoEsclusione() As ElencoEsclusioneDataTable
            Get
                Return Me.tableElencoEsclusione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property RiassuntoEsclusione() As RiassuntoEsclusioneDataTable
            Get
                Return Me.tableRiassuntoEsclusione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As DSElencoEsclusione = CType(MyBase.Clone,DSElencoEsclusione)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("ElencoEsclusione")) Is Nothing) Then
                    MyBase.Tables.Add(New ElencoEsclusioneDataTable(ds.Tables("ElencoEsclusione")))
                End If
                If (Not (ds.Tables("RiassuntoEsclusione")) Is Nothing) Then
                    MyBase.Tables.Add(New RiassuntoEsclusioneDataTable(ds.Tables("RiassuntoEsclusione")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableElencoEsclusione = CType(MyBase.Tables("ElencoEsclusione"),ElencoEsclusioneDataTable)
            If (initTable = true) Then
                If (Not (Me.tableElencoEsclusione) Is Nothing) Then
                    Me.tableElencoEsclusione.InitVars
                End If
            End If
            Me.tableRiassuntoEsclusione = CType(MyBase.Tables("RiassuntoEsclusione"),RiassuntoEsclusioneDataTable)
            If (initTable = true) Then
                If (Not (Me.tableRiassuntoEsclusione) Is Nothing) Then
                    Me.tableRiassuntoEsclusione.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "DSElencoEsclusione"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/ElencoEsclusioni.xsd"
            Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableElencoEsclusione = New ElencoEsclusioneDataTable()
            MyBase.Tables.Add(Me.tableElencoEsclusione)
            Me.tableRiassuntoEsclusione = New RiassuntoEsclusioneDataTable()
            MyBase.Tables.Add(Me.tableRiassuntoEsclusione)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeElencoEsclusione() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeRiassuntoEsclusione() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As DSElencoEsclusione = New DSElencoEsclusione()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub ElencoEsclusioneRowChangeEventHandler(ByVal sender As Object, ByVal e As ElencoEsclusioneRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub RiassuntoEsclusioneRowChangeEventHandler(ByVal sender As Object, ByVal e As RiassuntoEsclusioneRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class ElencoEsclusioneDataTable
            Inherits Global.System.Data.TypedTableBase(Of ElencoEsclusioneRow)
            
            Private columnPAZ_CODICE As Global.System.Data.DataColumn
            
            Private columnPAZ_NOME As Global.System.Data.DataColumn
            
            Private columnPAZ_COGNOME As Global.System.Data.DataColumn
            
            Private columnPAZ_DATA_NASCITA As Global.System.Data.DataColumn
            
            Private columnPAZ_INDIRIZZO_RESIDENZA As Global.System.Data.DataColumn
            
            Private columnPAZ_NOTE As Global.System.Data.DataColumn
            
            Private columnVEX_DATA_VISITA As Global.System.Data.DataColumn
            
            Private columnVEX_DATA_SCADENZA As Global.System.Data.DataColumn
            
            Private columnVAC_DESCRIZIONE As Global.System.Data.DataColumn
            
            Private columnMOE_DESCRIZIONE As Global.System.Data.DataColumn
            
            Private columnVAC_OBBLIGATORIA As Global.System.Data.DataColumn
            
            Private columnCNS_DESCRIZIONE As Global.System.Data.DataColumn
            
            Private columnCOM_DESCRIZIONE As Global.System.Data.DataColumn
            
            Private columnOPE_NOME As Global.System.Data.DataColumn
            
            Private columnPAZ_STATO_ANAGRAFICO As Global.System.Data.DataColumn
            
            Private columnSAN_DESCRIZIONE As Global.System.Data.DataColumn
            
            Private columnPAZ_NOTE_SOLLECITI As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "ElencoEsclusione"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_CODICEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_CODICE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_NOMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_NOME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_COGNOMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_COGNOME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_DATA_NASCITAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_DATA_NASCITA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_INDIRIZZO_RESIDENZAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_INDIRIZZO_RESIDENZA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_NOTEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_NOTE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property VEX_DATA_VISITAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnVEX_DATA_VISITA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property VEX_DATA_SCADENZAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnVEX_DATA_SCADENZA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property VAC_DESCRIZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnVAC_DESCRIZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MOE_DESCRIZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMOE_DESCRIZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property VAC_OBBLIGATORIAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnVAC_OBBLIGATORIA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CNS_DESCRIZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCNS_DESCRIZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property COM_DESCRIZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCOM_DESCRIZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property OPE_NOMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOPE_NOME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_STATO_ANAGRAFICOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_STATO_ANAGRAFICO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SAN_DESCRIZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSAN_DESCRIZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PAZ_NOTE_SOLLECITIColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPAZ_NOTE_SOLLECITI
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As ElencoEsclusioneRow
                Get
                    Return CType(Me.Rows(index),ElencoEsclusioneRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ElencoEsclusioneRowChanging As ElencoEsclusioneRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ElencoEsclusioneRowChanged As ElencoEsclusioneRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ElencoEsclusioneRowDeleting As ElencoEsclusioneRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event ElencoEsclusioneRowDeleted As ElencoEsclusioneRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddElencoEsclusioneRow(ByVal row As ElencoEsclusioneRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddElencoEsclusioneRow( _
                        ByVal PAZ_CODICE As Long,  _
                        ByVal PAZ_NOME As String,  _
                        ByVal PAZ_COGNOME As String,  _
                        ByVal PAZ_DATA_NASCITA As Date,  _
                        ByVal PAZ_INDIRIZZO_RESIDENZA As String,  _
                        ByVal PAZ_NOTE As String,  _
                        ByVal VEX_DATA_VISITA As Date,  _
                        ByVal VEX_DATA_SCADENZA As Date,  _
                        ByVal VAC_DESCRIZIONE As String,  _
                        ByVal MOE_DESCRIZIONE As String,  _
                        ByVal VAC_OBBLIGATORIA As String,  _
                        ByVal CNS_DESCRIZIONE As String,  _
                        ByVal COM_DESCRIZIONE As String,  _
                        ByVal OPE_NOME As String,  _
                        ByVal PAZ_STATO_ANAGRAFICO As String,  _
                        ByVal SAN_DESCRIZIONE As String,  _
                        ByVal PAZ_NOTE_SOLLECITI As String) As ElencoEsclusioneRow
                Dim rowElencoEsclusioneRow As ElencoEsclusioneRow = CType(Me.NewRow,ElencoEsclusioneRow)
                Dim columnValuesArray() As Object = New Object() {PAZ_CODICE, PAZ_NOME, PAZ_COGNOME, PAZ_DATA_NASCITA, PAZ_INDIRIZZO_RESIDENZA, PAZ_NOTE, VEX_DATA_VISITA, VEX_DATA_SCADENZA, VAC_DESCRIZIONE, MOE_DESCRIZIONE, VAC_OBBLIGATORIA, CNS_DESCRIZIONE, COM_DESCRIZIONE, OPE_NOME, PAZ_STATO_ANAGRAFICO, SAN_DESCRIZIONE, PAZ_NOTE_SOLLECITI}
                rowElencoEsclusioneRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowElencoEsclusioneRow)
                Return rowElencoEsclusioneRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As ElencoEsclusioneDataTable = CType(MyBase.Clone,ElencoEsclusioneDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New ElencoEsclusioneDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnPAZ_CODICE = MyBase.Columns("PAZ_CODICE")
                Me.columnPAZ_NOME = MyBase.Columns("PAZ_NOME")
                Me.columnPAZ_COGNOME = MyBase.Columns("PAZ_COGNOME")
                Me.columnPAZ_DATA_NASCITA = MyBase.Columns("PAZ_DATA_NASCITA")
                Me.columnPAZ_INDIRIZZO_RESIDENZA = MyBase.Columns("PAZ_INDIRIZZO_RESIDENZA")
                Me.columnPAZ_NOTE = MyBase.Columns("PAZ_NOTE")
                Me.columnVEX_DATA_VISITA = MyBase.Columns("VEX_DATA_VISITA")
                Me.columnVEX_DATA_SCADENZA = MyBase.Columns("VEX_DATA_SCADENZA")
                Me.columnVAC_DESCRIZIONE = MyBase.Columns("VAC_DESCRIZIONE")
                Me.columnMOE_DESCRIZIONE = MyBase.Columns("MOE_DESCRIZIONE")
                Me.columnVAC_OBBLIGATORIA = MyBase.Columns("VAC_OBBLIGATORIA")
                Me.columnCNS_DESCRIZIONE = MyBase.Columns("CNS_DESCRIZIONE")
                Me.columnCOM_DESCRIZIONE = MyBase.Columns("COM_DESCRIZIONE")
                Me.columnOPE_NOME = MyBase.Columns("OPE_NOME")
                Me.columnPAZ_STATO_ANAGRAFICO = MyBase.Columns("PAZ_STATO_ANAGRAFICO")
                Me.columnSAN_DESCRIZIONE = MyBase.Columns("SAN_DESCRIZIONE")
                Me.columnPAZ_NOTE_SOLLECITI = MyBase.Columns("PAZ_NOTE_SOLLECITI")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnPAZ_CODICE = New Global.System.Data.DataColumn("PAZ_CODICE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_CODICE)
                Me.columnPAZ_NOME = New Global.System.Data.DataColumn("PAZ_NOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_NOME)
                Me.columnPAZ_COGNOME = New Global.System.Data.DataColumn("PAZ_COGNOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_COGNOME)
                Me.columnPAZ_DATA_NASCITA = New Global.System.Data.DataColumn("PAZ_DATA_NASCITA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_DATA_NASCITA)
                Me.columnPAZ_INDIRIZZO_RESIDENZA = New Global.System.Data.DataColumn("PAZ_INDIRIZZO_RESIDENZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_INDIRIZZO_RESIDENZA)
                Me.columnPAZ_NOTE = New Global.System.Data.DataColumn("PAZ_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_NOTE)
                Me.columnVEX_DATA_VISITA = New Global.System.Data.DataColumn("VEX_DATA_VISITA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnVEX_DATA_VISITA)
                Me.columnVEX_DATA_SCADENZA = New Global.System.Data.DataColumn("VEX_DATA_SCADENZA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnVEX_DATA_SCADENZA)
                Me.columnVAC_DESCRIZIONE = New Global.System.Data.DataColumn("VAC_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnVAC_DESCRIZIONE)
                Me.columnMOE_DESCRIZIONE = New Global.System.Data.DataColumn("MOE_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMOE_DESCRIZIONE)
                Me.columnVAC_OBBLIGATORIA = New Global.System.Data.DataColumn("VAC_OBBLIGATORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnVAC_OBBLIGATORIA)
                Me.columnCNS_DESCRIZIONE = New Global.System.Data.DataColumn("CNS_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCNS_DESCRIZIONE)
                Me.columnCOM_DESCRIZIONE = New Global.System.Data.DataColumn("COM_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCOM_DESCRIZIONE)
                Me.columnOPE_NOME = New Global.System.Data.DataColumn("OPE_NOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOPE_NOME)
                Me.columnPAZ_STATO_ANAGRAFICO = New Global.System.Data.DataColumn("PAZ_STATO_ANAGRAFICO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_STATO_ANAGRAFICO)
                Me.columnSAN_DESCRIZIONE = New Global.System.Data.DataColumn("SAN_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSAN_DESCRIZIONE)
                Me.columnPAZ_NOTE_SOLLECITI = New Global.System.Data.DataColumn("PAZ_NOTE_SOLLECITI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPAZ_NOTE_SOLLECITI)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewElencoEsclusioneRow() As ElencoEsclusioneRow
                Return CType(Me.NewRow,ElencoEsclusioneRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New ElencoEsclusioneRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(ElencoEsclusioneRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.ElencoEsclusioneRowChangedEvent) Is Nothing) Then
                    RaiseEvent ElencoEsclusioneRowChanged(Me, New ElencoEsclusioneRowChangeEvent(CType(e.Row,ElencoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.ElencoEsclusioneRowChangingEvent) Is Nothing) Then
                    RaiseEvent ElencoEsclusioneRowChanging(Me, New ElencoEsclusioneRowChangeEvent(CType(e.Row,ElencoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.ElencoEsclusioneRowDeletedEvent) Is Nothing) Then
                    RaiseEvent ElencoEsclusioneRowDeleted(Me, New ElencoEsclusioneRowChangeEvent(CType(e.Row,ElencoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.ElencoEsclusioneRowDeletingEvent) Is Nothing) Then
                    RaiseEvent ElencoEsclusioneRowDeleting(Me, New ElencoEsclusioneRowChangeEvent(CType(e.Row,ElencoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveElencoEsclusioneRow(ByVal row As ElencoEsclusioneRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As DSElencoEsclusione = New DSElencoEsclusione()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "ElencoEsclusioneDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class RiassuntoEsclusioneDataTable
            Inherits Global.System.Data.TypedTableBase(Of RiassuntoEsclusioneRow)
            
            Private columnVAC_CODICE As Global.System.Data.DataColumn
            
            Private columnVAC_DESCRIZIONE As Global.System.Data.DataColumn
            
            Private columnVAC_OBBLIGATORIA As Global.System.Data.DataColumn
            
            Private columnTOT_ESONERI As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "RiassuntoEsclusione"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property VAC_CODICEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnVAC_CODICE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property VAC_DESCRIZIONEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnVAC_DESCRIZIONE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property VAC_OBBLIGATORIAColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnVAC_OBBLIGATORIA
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property TOT_ESONERIColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTOT_ESONERI
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As RiassuntoEsclusioneRow
                Get
                    Return CType(Me.Rows(index),RiassuntoEsclusioneRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event RiassuntoEsclusioneRowChanging As RiassuntoEsclusioneRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event RiassuntoEsclusioneRowChanged As RiassuntoEsclusioneRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event RiassuntoEsclusioneRowDeleting As RiassuntoEsclusioneRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event RiassuntoEsclusioneRowDeleted As RiassuntoEsclusioneRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddRiassuntoEsclusioneRow(ByVal row As RiassuntoEsclusioneRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddRiassuntoEsclusioneRow(ByVal VAC_CODICE As String, ByVal VAC_DESCRIZIONE As String, ByVal VAC_OBBLIGATORIA As String, ByVal TOT_ESONERI As Long) As RiassuntoEsclusioneRow
                Dim rowRiassuntoEsclusioneRow As RiassuntoEsclusioneRow = CType(Me.NewRow,RiassuntoEsclusioneRow)
                Dim columnValuesArray() As Object = New Object() {VAC_CODICE, VAC_DESCRIZIONE, VAC_OBBLIGATORIA, TOT_ESONERI}
                rowRiassuntoEsclusioneRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowRiassuntoEsclusioneRow)
                Return rowRiassuntoEsclusioneRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As RiassuntoEsclusioneDataTable = CType(MyBase.Clone,RiassuntoEsclusioneDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New RiassuntoEsclusioneDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnVAC_CODICE = MyBase.Columns("VAC_CODICE")
                Me.columnVAC_DESCRIZIONE = MyBase.Columns("VAC_DESCRIZIONE")
                Me.columnVAC_OBBLIGATORIA = MyBase.Columns("VAC_OBBLIGATORIA")
                Me.columnTOT_ESONERI = MyBase.Columns("TOT_ESONERI")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnVAC_CODICE = New Global.System.Data.DataColumn("VAC_CODICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnVAC_CODICE)
                Me.columnVAC_DESCRIZIONE = New Global.System.Data.DataColumn("VAC_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnVAC_DESCRIZIONE)
                Me.columnVAC_OBBLIGATORIA = New Global.System.Data.DataColumn("VAC_OBBLIGATORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnVAC_OBBLIGATORIA)
                Me.columnTOT_ESONERI = New Global.System.Data.DataColumn("TOT_ESONERI", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTOT_ESONERI)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewRiassuntoEsclusioneRow() As RiassuntoEsclusioneRow
                Return CType(Me.NewRow,RiassuntoEsclusioneRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New RiassuntoEsclusioneRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(RiassuntoEsclusioneRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.RiassuntoEsclusioneRowChangedEvent) Is Nothing) Then
                    RaiseEvent RiassuntoEsclusioneRowChanged(Me, New RiassuntoEsclusioneRowChangeEvent(CType(e.Row,RiassuntoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.RiassuntoEsclusioneRowChangingEvent) Is Nothing) Then
                    RaiseEvent RiassuntoEsclusioneRowChanging(Me, New RiassuntoEsclusioneRowChangeEvent(CType(e.Row,RiassuntoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.RiassuntoEsclusioneRowDeletedEvent) Is Nothing) Then
                    RaiseEvent RiassuntoEsclusioneRowDeleted(Me, New RiassuntoEsclusioneRowChangeEvent(CType(e.Row,RiassuntoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.RiassuntoEsclusioneRowDeletingEvent) Is Nothing) Then
                    RaiseEvent RiassuntoEsclusioneRowDeleting(Me, New RiassuntoEsclusioneRowChangeEvent(CType(e.Row,RiassuntoEsclusioneRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveRiassuntoEsclusioneRow(ByVal row As RiassuntoEsclusioneRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As DSElencoEsclusione = New DSElencoEsclusione()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "RiassuntoEsclusioneDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class ElencoEsclusioneRow
            Inherits Global.System.Data.DataRow
            
            Private tableElencoEsclusione As ElencoEsclusioneDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableElencoEsclusione = CType(Me.Table,ElencoEsclusioneDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_CODICE() As Long
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_CODICEColumn),Long)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_CODICE' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_CODICEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_NOME() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_NOMEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_NOME' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_NOMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_COGNOME() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_COGNOMEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_COGNOME' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_COGNOMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_DATA_NASCITA() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_DATA_NASCITAColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_DATA_NASCITA' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_DATA_NASCITAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_INDIRIZZO_RESIDENZA() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_INDIRIZZO_RESIDENZAColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_INDIRIZZO_RESIDENZA' in table 'ElencoEsclusione' is DBN"& _ 
                                "ull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_INDIRIZZO_RESIDENZAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_NOTE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_NOTEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_NOTE' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_NOTEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property VEX_DATA_VISITA() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.VEX_DATA_VISITAColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'VEX_DATA_VISITA' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.VEX_DATA_VISITAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property VEX_DATA_SCADENZA() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.VEX_DATA_SCADENZAColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'VEX_DATA_SCADENZA' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.VEX_DATA_SCADENZAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property VAC_DESCRIZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.VAC_DESCRIZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_DESCRIZIONE' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.VAC_DESCRIZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MOE_DESCRIZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.MOE_DESCRIZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MOE_DESCRIZIONE' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.MOE_DESCRIZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property VAC_OBBLIGATORIA() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.VAC_OBBLIGATORIAColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_OBBLIGATORIA' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.VAC_OBBLIGATORIAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CNS_DESCRIZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.CNS_DESCRIZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CNS_DESCRIZIONE' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.CNS_DESCRIZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property COM_DESCRIZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.COM_DESCRIZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'COM_DESCRIZIONE' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.COM_DESCRIZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property OPE_NOME() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.OPE_NOMEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'OPE_NOME' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.OPE_NOMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_STATO_ANAGRAFICO() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_STATO_ANAGRAFICOColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_STATO_ANAGRAFICO' in table 'ElencoEsclusione' is DBNull"& _ 
                                ".", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_STATO_ANAGRAFICOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SAN_DESCRIZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.SAN_DESCRIZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SAN_DESCRIZIONE' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.SAN_DESCRIZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PAZ_NOTE_SOLLECITI() As String
                Get
                    Try 
                        Return CType(Me(Me.tableElencoEsclusione.PAZ_NOTE_SOLLECITIColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_NOTE_SOLLECITI' in table 'ElencoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableElencoEsclusione.PAZ_NOTE_SOLLECITIColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_CODICENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_CODICEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_CODICENull()
                Me(Me.tableElencoEsclusione.PAZ_CODICEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_NOMENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_NOMEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_NOMENull()
                Me(Me.tableElencoEsclusione.PAZ_NOMEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_COGNOMENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_COGNOMEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_COGNOMENull()
                Me(Me.tableElencoEsclusione.PAZ_COGNOMEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_DATA_NASCITANull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_DATA_NASCITAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_DATA_NASCITANull()
                Me(Me.tableElencoEsclusione.PAZ_DATA_NASCITAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_INDIRIZZO_RESIDENZANull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_INDIRIZZO_RESIDENZAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_INDIRIZZO_RESIDENZANull()
                Me(Me.tableElencoEsclusione.PAZ_INDIRIZZO_RESIDENZAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_NOTENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_NOTEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_NOTENull()
                Me(Me.tableElencoEsclusione.PAZ_NOTEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsVEX_DATA_VISITANull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.VEX_DATA_VISITAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetVEX_DATA_VISITANull()
                Me(Me.tableElencoEsclusione.VEX_DATA_VISITAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsVEX_DATA_SCADENZANull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.VEX_DATA_SCADENZAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetVEX_DATA_SCADENZANull()
                Me(Me.tableElencoEsclusione.VEX_DATA_SCADENZAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsVAC_DESCRIZIONENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.VAC_DESCRIZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetVAC_DESCRIZIONENull()
                Me(Me.tableElencoEsclusione.VAC_DESCRIZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsMOE_DESCRIZIONENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.MOE_DESCRIZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetMOE_DESCRIZIONENull()
                Me(Me.tableElencoEsclusione.MOE_DESCRIZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsVAC_OBBLIGATORIANull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.VAC_OBBLIGATORIAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetVAC_OBBLIGATORIANull()
                Me(Me.tableElencoEsclusione.VAC_OBBLIGATORIAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCNS_DESCRIZIONENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.CNS_DESCRIZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCNS_DESCRIZIONENull()
                Me(Me.tableElencoEsclusione.CNS_DESCRIZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCOM_DESCRIZIONENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.COM_DESCRIZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCOM_DESCRIZIONENull()
                Me(Me.tableElencoEsclusione.COM_DESCRIZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsOPE_NOMENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.OPE_NOMEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetOPE_NOMENull()
                Me(Me.tableElencoEsclusione.OPE_NOMEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_STATO_ANAGRAFICONull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_STATO_ANAGRAFICOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_STATO_ANAGRAFICONull()
                Me(Me.tableElencoEsclusione.PAZ_STATO_ANAGRAFICOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSAN_DESCRIZIONENull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.SAN_DESCRIZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSAN_DESCRIZIONENull()
                Me(Me.tableElencoEsclusione.SAN_DESCRIZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsPAZ_NOTE_SOLLECITINull() As Boolean
                Return Me.IsNull(Me.tableElencoEsclusione.PAZ_NOTE_SOLLECITIColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetPAZ_NOTE_SOLLECITINull()
                Me(Me.tableElencoEsclusione.PAZ_NOTE_SOLLECITIColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class RiassuntoEsclusioneRow
            Inherits Global.System.Data.DataRow
            
            Private tableRiassuntoEsclusione As RiassuntoEsclusioneDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableRiassuntoEsclusione = CType(Me.Table,RiassuntoEsclusioneDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property VAC_CODICE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableRiassuntoEsclusione.VAC_CODICEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_CODICE' in table 'RiassuntoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRiassuntoEsclusione.VAC_CODICEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property VAC_DESCRIZIONE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableRiassuntoEsclusione.VAC_DESCRIZIONEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_DESCRIZIONE' in table 'RiassuntoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRiassuntoEsclusione.VAC_DESCRIZIONEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property VAC_OBBLIGATORIA() As String
                Get
                    Try 
                        Return CType(Me(Me.tableRiassuntoEsclusione.VAC_OBBLIGATORIAColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_OBBLIGATORIA' in table 'RiassuntoEsclusione' is DBNull."& _ 
                                "", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRiassuntoEsclusione.VAC_OBBLIGATORIAColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property TOT_ESONERI() As Long
                Get
                    Try 
                        Return CType(Me(Me.tableRiassuntoEsclusione.TOT_ESONERIColumn),Long)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TOT_ESONERI' in table 'RiassuntoEsclusione' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRiassuntoEsclusione.TOT_ESONERIColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsVAC_CODICENull() As Boolean
                Return Me.IsNull(Me.tableRiassuntoEsclusione.VAC_CODICEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetVAC_CODICENull()
                Me(Me.tableRiassuntoEsclusione.VAC_CODICEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsVAC_DESCRIZIONENull() As Boolean
                Return Me.IsNull(Me.tableRiassuntoEsclusione.VAC_DESCRIZIONEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetVAC_DESCRIZIONENull()
                Me(Me.tableRiassuntoEsclusione.VAC_DESCRIZIONEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsVAC_OBBLIGATORIANull() As Boolean
                Return Me.IsNull(Me.tableRiassuntoEsclusione.VAC_OBBLIGATORIAColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetVAC_OBBLIGATORIANull()
                Me(Me.tableRiassuntoEsclusione.VAC_OBBLIGATORIAColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsTOT_ESONERINull() As Boolean
                Return Me.IsNull(Me.tableRiassuntoEsclusione.TOT_ESONERIColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetTOT_ESONERINull()
                Me(Me.tableRiassuntoEsclusione.TOT_ESONERIColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class ElencoEsclusioneRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As ElencoEsclusioneRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As ElencoEsclusioneRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As ElencoEsclusioneRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class RiassuntoEsclusioneRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As RiassuntoEsclusioneRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As RiassuntoEsclusioneRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As RiassuntoEsclusioneRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
End Namespace
