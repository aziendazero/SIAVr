'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsNonVaccinatiMedico"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsNonVaccinatiMedico
    Inherits Global.System.Data.DataSet
    
    Private tableFiltriVaccinazioni As FiltriVaccinazioniDataTable
    
    Private tableElencoNonVaccinati As ElencoNonVaccinatiDataTable
    
    Private tableMedici As MediciDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FiltriVaccinazioni")) Is Nothing) Then
                MyBase.Tables.Add(New FiltriVaccinazioniDataTable(ds.Tables("FiltriVaccinazioni")))
            End If
            If (Not (ds.Tables("ElencoNonVaccinati")) Is Nothing) Then
                MyBase.Tables.Add(New ElencoNonVaccinatiDataTable(ds.Tables("ElencoNonVaccinati")))
            End If
            If (Not (ds.Tables("Medici")) Is Nothing) Then
                MyBase.Tables.Add(New MediciDataTable(ds.Tables("Medici")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FiltriVaccinazioni() As FiltriVaccinazioniDataTable
        Get
            Return Me.tableFiltriVaccinazioni
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ElencoNonVaccinati() As ElencoNonVaccinatiDataTable
        Get
            Return Me.tableElencoNonVaccinati
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Medici() As MediciDataTable
        Get
            Return Me.tableMedici
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsNonVaccinatiMedico = CType(MyBase.Clone,dsNonVaccinatiMedico)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FiltriVaccinazioni")) Is Nothing) Then
                MyBase.Tables.Add(New FiltriVaccinazioniDataTable(ds.Tables("FiltriVaccinazioni")))
            End If
            If (Not (ds.Tables("ElencoNonVaccinati")) Is Nothing) Then
                MyBase.Tables.Add(New ElencoNonVaccinatiDataTable(ds.Tables("ElencoNonVaccinati")))
            End If
            If (Not (ds.Tables("Medici")) Is Nothing) Then
                MyBase.Tables.Add(New MediciDataTable(ds.Tables("Medici")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFiltriVaccinazioni = CType(MyBase.Tables("FiltriVaccinazioni"),FiltriVaccinazioniDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFiltriVaccinazioni) Is Nothing) Then
                Me.tableFiltriVaccinazioni.InitVars
            End If
        End If
        Me.tableElencoNonVaccinati = CType(MyBase.Tables("ElencoNonVaccinati"),ElencoNonVaccinatiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableElencoNonVaccinati) Is Nothing) Then
                Me.tableElencoNonVaccinati.InitVars
            End If
        End If
        Me.tableMedici = CType(MyBase.Tables("Medici"),MediciDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMedici) Is Nothing) Then
                Me.tableMedici.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsNonVaccinatiMedico"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsNonVaccinatiMedico.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFiltriVaccinazioni = New FiltriVaccinazioniDataTable()
        MyBase.Tables.Add(Me.tableFiltriVaccinazioni)
        Me.tableElencoNonVaccinati = New ElencoNonVaccinatiDataTable()
        MyBase.Tables.Add(Me.tableElencoNonVaccinati)
        Me.tableMedici = New MediciDataTable()
        MyBase.Tables.Add(Me.tableMedici)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFiltriVaccinazioni() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeElencoNonVaccinati() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMedici() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsNonVaccinatiMedico = New dsNonVaccinatiMedico()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FiltriVaccinazioniRowChangeEventHandler(ByVal sender As Object, ByVal e As FiltriVaccinazioniRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ElencoNonVaccinatiRowChangeEventHandler(ByVal sender As Object, ByVal e As ElencoNonVaccinatiRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MediciRowChangeEventHandler(ByVal sender As Object, ByVal e As MediciRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FiltriVaccinazioniDataTable
        Inherits Global.System.Data.TypedTableBase(Of FiltriVaccinazioniRow)
        
        Private columnVAC_CODICE As Global.System.Data.DataColumn
        
        Private columnVAC_DESCRIZIONE As Global.System.Data.DataColumn
        
        Private columnDOSE As Global.System.Data.DataColumn
        
        Private columnGIORNI_VITA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FiltriVaccinazioni"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAC_CODICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAC_CODICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAC_DESCRIZIONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAC_DESCRIZIONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GIORNI_VITAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGIORNI_VITA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FiltriVaccinazioniRow
            Get
                Return CType(Me.Rows(index),FiltriVaccinazioniRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FiltriVaccinazioniRowChanging As FiltriVaccinazioniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FiltriVaccinazioniRowChanged As FiltriVaccinazioniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FiltriVaccinazioniRowDeleting As FiltriVaccinazioniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FiltriVaccinazioniRowDeleted As FiltriVaccinazioniRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFiltriVaccinazioniRow(ByVal row As FiltriVaccinazioniRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFiltriVaccinazioniRow(ByVal VAC_CODICE As String, ByVal VAC_DESCRIZIONE As String, ByVal DOSE As Integer, ByVal GIORNI_VITA As Integer) As FiltriVaccinazioniRow
            Dim rowFiltriVaccinazioniRow As FiltriVaccinazioniRow = CType(Me.NewRow,FiltriVaccinazioniRow)
            Dim columnValuesArray() As Object = New Object() {VAC_CODICE, VAC_DESCRIZIONE, DOSE, GIORNI_VITA}
            rowFiltriVaccinazioniRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFiltriVaccinazioniRow)
            Return rowFiltriVaccinazioniRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FiltriVaccinazioniDataTable = CType(MyBase.Clone,FiltriVaccinazioniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FiltriVaccinazioniDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnVAC_CODICE = MyBase.Columns("VAC_CODICE")
            Me.columnVAC_DESCRIZIONE = MyBase.Columns("VAC_DESCRIZIONE")
            Me.columnDOSE = MyBase.Columns("DOSE")
            Me.columnGIORNI_VITA = MyBase.Columns("GIORNI_VITA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnVAC_CODICE = New Global.System.Data.DataColumn("VAC_CODICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAC_CODICE)
            Me.columnVAC_DESCRIZIONE = New Global.System.Data.DataColumn("VAC_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAC_DESCRIZIONE)
            Me.columnDOSE = New Global.System.Data.DataColumn("DOSE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOSE)
            Me.columnGIORNI_VITA = New Global.System.Data.DataColumn("GIORNI_VITA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGIORNI_VITA)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFiltriVaccinazioniRow() As FiltriVaccinazioniRow
            Return CType(Me.NewRow,FiltriVaccinazioniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FiltriVaccinazioniRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FiltriVaccinazioniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FiltriVaccinazioniRowChangedEvent) Is Nothing) Then
                RaiseEvent FiltriVaccinazioniRowChanged(Me, New FiltriVaccinazioniRowChangeEvent(CType(e.Row,FiltriVaccinazioniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FiltriVaccinazioniRowChangingEvent) Is Nothing) Then
                RaiseEvent FiltriVaccinazioniRowChanging(Me, New FiltriVaccinazioniRowChangeEvent(CType(e.Row,FiltriVaccinazioniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FiltriVaccinazioniRowDeletedEvent) Is Nothing) Then
                RaiseEvent FiltriVaccinazioniRowDeleted(Me, New FiltriVaccinazioniRowChangeEvent(CType(e.Row,FiltriVaccinazioniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FiltriVaccinazioniRowDeletingEvent) Is Nothing) Then
                RaiseEvent FiltriVaccinazioniRowDeleting(Me, New FiltriVaccinazioniRowChangeEvent(CType(e.Row,FiltriVaccinazioniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFiltriVaccinazioniRow(ByVal row As FiltriVaccinazioniRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNonVaccinatiMedico = New dsNonVaccinatiMedico()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FiltriVaccinazioniDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ElencoNonVaccinatiDataTable
        Inherits Global.System.Data.TypedTableBase(Of ElencoNonVaccinatiRow)
        
        Private columnpaz_codice As Global.System.Data.DataColumn
        
        Private columnpaz_cognome As Global.System.Data.DataColumn
        
        Private columnpaz_nome As Global.System.Data.DataColumn
        
        Private columnpaz_data_nascita As Global.System.Data.DataColumn
        
        Private columnpaz_indirizzo_residenza As Global.System.Data.DataColumn
        
        Private columncom_descrizione As Global.System.Data.DataColumn
        
        Private columnpaz_com_codice_residenza As Global.System.Data.DataColumn
        
        Private columnpaz_note As Global.System.Data.DataColumn
        
        Private columnPAZ_LIBERO_1 As Global.System.Data.DataColumn
        
        Private columnvac_codice As Global.System.Data.DataColumn
        
        Private columnvac_descrizione As Global.System.Data.DataColumn
        
        Private columnVAC_ORDINE As Global.System.Data.DataColumn
        
        Private columnMOE_DESCRIZIONE As Global.System.Data.DataColumn
        
        Private columnINADEMPIENZA As Global.System.Data.DataColumn
        
        Private columnPAZ_MED_CODICE_BASE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ElencoNonVaccinati"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paz_codiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaz_codice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paz_cognomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaz_cognome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paz_nomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaz_nome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paz_data_nascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaz_data_nascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paz_indirizzo_residenzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaz_indirizzo_residenza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property com_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncom_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paz_com_codice_residenzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaz_com_codice_residenza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paz_noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaz_note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAZ_LIBERO_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAZ_LIBERO_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vac_codiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvac_codice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property vac_descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvac_descrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAC_ORDINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAC_ORDINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOE_DESCRIZIONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOE_DESCRIZIONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INADEMPIENZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINADEMPIENZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAZ_MED_CODICE_BASEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAZ_MED_CODICE_BASE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ElencoNonVaccinatiRow
            Get
                Return CType(Me.Rows(index),ElencoNonVaccinatiRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ElencoNonVaccinatiRowChanging As ElencoNonVaccinatiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ElencoNonVaccinatiRowChanged As ElencoNonVaccinatiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ElencoNonVaccinatiRowDeleting As ElencoNonVaccinatiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ElencoNonVaccinatiRowDeleted As ElencoNonVaccinatiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddElencoNonVaccinatiRow(ByVal row As ElencoNonVaccinatiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddElencoNonVaccinatiRow(ByVal paz_codice As Long, ByVal paz_cognome As String, ByVal paz_nome As String, ByVal paz_data_nascita As Date, ByVal paz_indirizzo_residenza As String, ByVal com_descrizione As String, ByVal paz_com_codice_residenza As String, ByVal paz_note As String, ByVal PAZ_LIBERO_1 As String, ByVal vac_codice As String, ByVal vac_descrizione As String, ByVal VAC_ORDINE As String, ByVal MOE_DESCRIZIONE As String, ByVal INADEMPIENZA As String, ByVal PAZ_MED_CODICE_BASE As String) As ElencoNonVaccinatiRow
            Dim rowElencoNonVaccinatiRow As ElencoNonVaccinatiRow = CType(Me.NewRow,ElencoNonVaccinatiRow)
            Dim columnValuesArray() As Object = New Object() {paz_codice, paz_cognome, paz_nome, paz_data_nascita, paz_indirizzo_residenza, com_descrizione, paz_com_codice_residenza, paz_note, PAZ_LIBERO_1, vac_codice, vac_descrizione, VAC_ORDINE, MOE_DESCRIZIONE, INADEMPIENZA, PAZ_MED_CODICE_BASE}
            rowElencoNonVaccinatiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowElencoNonVaccinatiRow)
            Return rowElencoNonVaccinatiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ElencoNonVaccinatiDataTable = CType(MyBase.Clone,ElencoNonVaccinatiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ElencoNonVaccinatiDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpaz_codice = MyBase.Columns("PAZ_CODICE")
            Me.columnpaz_cognome = MyBase.Columns("PAZ_COGNOME")
            Me.columnpaz_nome = MyBase.Columns("PAZ_NOME")
            Me.columnpaz_data_nascita = MyBase.Columns("PAZ_DATA_NASCITA")
            Me.columnpaz_indirizzo_residenza = MyBase.Columns("PAZ_INDIRIZZO_RESIDENZA")
            Me.columncom_descrizione = MyBase.Columns("COM_DESCRIZIONE")
            Me.columnpaz_com_codice_residenza = MyBase.Columns("PAZ_COM_CODICE_RESIDENZA")
            Me.columnpaz_note = MyBase.Columns("PAZ_NOTE")
            Me.columnPAZ_LIBERO_1 = MyBase.Columns("PAZ_LIBERO_1")
            Me.columnvac_codice = MyBase.Columns("VAC_CODICE")
            Me.columnvac_descrizione = MyBase.Columns("VAC_DESCRIZIONE")
            Me.columnVAC_ORDINE = MyBase.Columns("VAC_ORDINE")
            Me.columnMOE_DESCRIZIONE = MyBase.Columns("MOE_DESCRIZIONE")
            Me.columnINADEMPIENZA = MyBase.Columns("INADEMPIENZA")
            Me.columnPAZ_MED_CODICE_BASE = MyBase.Columns("PAZ_MED_CODICE_BASE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpaz_codice = New Global.System.Data.DataColumn("PAZ_CODICE", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            Me.columnpaz_codice.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "paz_codice")
            Me.columnpaz_codice.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "paz_codiceColumn")
            Me.columnpaz_codice.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnpaz_codice")
            Me.columnpaz_codice.ExtendedProperties.Add("Generator_UserColumnName", "PAZ_CODICE")
            MyBase.Columns.Add(Me.columnpaz_codice)
            Me.columnpaz_cognome = New Global.System.Data.DataColumn("PAZ_COGNOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnpaz_cognome.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "paz_cognome")
            Me.columnpaz_cognome.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "paz_cognomeColumn")
            Me.columnpaz_cognome.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnpaz_cognome")
            Me.columnpaz_cognome.ExtendedProperties.Add("Generator_UserColumnName", "PAZ_COGNOME")
            MyBase.Columns.Add(Me.columnpaz_cognome)
            Me.columnpaz_nome = New Global.System.Data.DataColumn("PAZ_NOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnpaz_nome.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "paz_nome")
            Me.columnpaz_nome.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "paz_nomeColumn")
            Me.columnpaz_nome.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnpaz_nome")
            Me.columnpaz_nome.ExtendedProperties.Add("Generator_UserColumnName", "PAZ_NOME")
            MyBase.Columns.Add(Me.columnpaz_nome)
            Me.columnpaz_data_nascita = New Global.System.Data.DataColumn("PAZ_DATA_NASCITA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnpaz_data_nascita.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "paz_data_nascita")
            Me.columnpaz_data_nascita.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "paz_data_nascitaColumn")
            Me.columnpaz_data_nascita.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnpaz_data_nascita")
            Me.columnpaz_data_nascita.ExtendedProperties.Add("Generator_UserColumnName", "PAZ_DATA_NASCITA")
            MyBase.Columns.Add(Me.columnpaz_data_nascita)
            Me.columnpaz_indirizzo_residenza = New Global.System.Data.DataColumn("PAZ_INDIRIZZO_RESIDENZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnpaz_indirizzo_residenza.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "paz_indirizzo_residenza")
            Me.columnpaz_indirizzo_residenza.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "paz_indirizzo_residenzaColumn")
            Me.columnpaz_indirizzo_residenza.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnpaz_indirizzo_residenza")
            Me.columnpaz_indirizzo_residenza.ExtendedProperties.Add("Generator_UserColumnName", "PAZ_INDIRIZZO_RESIDENZA")
            MyBase.Columns.Add(Me.columnpaz_indirizzo_residenza)
            Me.columncom_descrizione = New Global.System.Data.DataColumn("COM_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columncom_descrizione.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "com_descrizione")
            Me.columncom_descrizione.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "com_descrizioneColumn")
            Me.columncom_descrizione.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columncom_descrizione")
            Me.columncom_descrizione.ExtendedProperties.Add("Generator_UserColumnName", "COM_DESCRIZIONE")
            MyBase.Columns.Add(Me.columncom_descrizione)
            Me.columnpaz_com_codice_residenza = New Global.System.Data.DataColumn("PAZ_COM_CODICE_RESIDENZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnpaz_com_codice_residenza.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "paz_com_codice_residenza")
            Me.columnpaz_com_codice_residenza.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "paz_com_codice_residenzaColumn")
            Me.columnpaz_com_codice_residenza.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnpaz_com_codice_residenza")
            Me.columnpaz_com_codice_residenza.ExtendedProperties.Add("Generator_UserColumnName", "PAZ_COM_CODICE_RESIDENZA")
            MyBase.Columns.Add(Me.columnpaz_com_codice_residenza)
            Me.columnpaz_note = New Global.System.Data.DataColumn("PAZ_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnpaz_note.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "paz_note")
            Me.columnpaz_note.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "paz_noteColumn")
            Me.columnpaz_note.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnpaz_note")
            Me.columnpaz_note.ExtendedProperties.Add("Generator_UserColumnName", "PAZ_NOTE")
            MyBase.Columns.Add(Me.columnpaz_note)
            Me.columnPAZ_LIBERO_1 = New Global.System.Data.DataColumn("PAZ_LIBERO_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAZ_LIBERO_1)
            Me.columnvac_codice = New Global.System.Data.DataColumn("VAC_CODICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnvac_codice.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "vac_codice")
            Me.columnvac_codice.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "vac_codiceColumn")
            Me.columnvac_codice.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnvac_codice")
            Me.columnvac_codice.ExtendedProperties.Add("Generator_UserColumnName", "VAC_CODICE")
            MyBase.Columns.Add(Me.columnvac_codice)
            Me.columnvac_descrizione = New Global.System.Data.DataColumn("VAC_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnvac_descrizione.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "vac_descrizione")
            Me.columnvac_descrizione.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "vac_descrizioneColumn")
            Me.columnvac_descrizione.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnvac_descrizione")
            Me.columnvac_descrizione.ExtendedProperties.Add("Generator_UserColumnName", "VAC_DESCRIZIONE")
            MyBase.Columns.Add(Me.columnvac_descrizione)
            Me.columnVAC_ORDINE = New Global.System.Data.DataColumn("VAC_ORDINE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAC_ORDINE)
            Me.columnMOE_DESCRIZIONE = New Global.System.Data.DataColumn("MOE_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOE_DESCRIZIONE)
            Me.columnINADEMPIENZA = New Global.System.Data.DataColumn("INADEMPIENZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINADEMPIENZA)
            Me.columnPAZ_MED_CODICE_BASE = New Global.System.Data.DataColumn("PAZ_MED_CODICE_BASE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAZ_MED_CODICE_BASE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewElencoNonVaccinatiRow() As ElencoNonVaccinatiRow
            Return CType(Me.NewRow,ElencoNonVaccinatiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ElencoNonVaccinatiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ElencoNonVaccinatiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ElencoNonVaccinatiRowChangedEvent) Is Nothing) Then
                RaiseEvent ElencoNonVaccinatiRowChanged(Me, New ElencoNonVaccinatiRowChangeEvent(CType(e.Row,ElencoNonVaccinatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ElencoNonVaccinatiRowChangingEvent) Is Nothing) Then
                RaiseEvent ElencoNonVaccinatiRowChanging(Me, New ElencoNonVaccinatiRowChangeEvent(CType(e.Row,ElencoNonVaccinatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ElencoNonVaccinatiRowDeletedEvent) Is Nothing) Then
                RaiseEvent ElencoNonVaccinatiRowDeleted(Me, New ElencoNonVaccinatiRowChangeEvent(CType(e.Row,ElencoNonVaccinatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ElencoNonVaccinatiRowDeletingEvent) Is Nothing) Then
                RaiseEvent ElencoNonVaccinatiRowDeleting(Me, New ElencoNonVaccinatiRowChangeEvent(CType(e.Row,ElencoNonVaccinatiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveElencoNonVaccinatiRow(ByVal row As ElencoNonVaccinatiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNonVaccinatiMedico = New dsNonVaccinatiMedico()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ElencoNonVaccinatiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MediciDataTable
        Inherits Global.System.Data.TypedTableBase(Of MediciRow)
        
        Private columnMED_CODICE As Global.System.Data.DataColumn
        
        Private columnMED_DESCRIZIONE As Global.System.Data.DataColumn
        
        Private columnNUM_PAZIENTI As Global.System.Data.DataColumn
        
        Private columnvac_codice As Global.System.Data.DataColumn
        
        Private columnVAC_DESCRIZIONE As Global.System.Data.DataColumn
        
        Private columnVAC_ORDINE As Global.System.Data.DataColumn
        
        Private columnNUM_NON_VACCINATI As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Medici"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MED_CODICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_CODICE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MED_DESCRIZIONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_DESCRIZIONE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUM_PAZIENTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUM_PAZIENTI
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property vac_codiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvac_codice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VAC_DESCRIZIONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAC_DESCRIZIONE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VAC_ORDINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAC_ORDINE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUM_NON_VACCINATIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUM_NON_VACCINATI
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MediciRow
            Get
                Return CType(Me.Rows(index), MediciRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MediciRowChanging As MediciRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MediciRowChanged As MediciRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MediciRowDeleting As MediciRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MediciRowDeleted As MediciRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMediciRow(ByVal row As MediciRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMediciRow(ByVal MED_CODICE As String, ByVal MED_DESCRIZIONE As String, ByVal NUM_PAZIENTI As Integer, ByVal vac_codice As String, ByVal VAC_DESCRIZIONE As String, ByVal VAC_ORDINE As String, ByVal NUM_NON_VACCINATI As Integer) As MediciRow
            Dim rowMediciRow As MediciRow = CType(Me.NewRow, MediciRow)
            Dim columnValuesArray() As Object = New Object() {MED_CODICE, MED_DESCRIZIONE, NUM_PAZIENTI, vac_codice, VAC_DESCRIZIONE, VAC_ORDINE, NUM_NON_VACCINATI}
            rowMediciRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMediciRow)
            Return rowMediciRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MediciDataTable = CType(MyBase.Clone, MediciDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MediciDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnMED_CODICE = MyBase.Columns("MED_CODICE")
            Me.columnMED_DESCRIZIONE = MyBase.Columns("MED_DESCRIZIONE")
            Me.columnNUM_PAZIENTI = MyBase.Columns("NUM_PAZIENTI")
            Me.columnvac_codice = MyBase.Columns("VAC_CODICE")
            Me.columnVAC_DESCRIZIONE = MyBase.Columns("VAC_DESCRIZIONE")
            Me.columnVAC_ORDINE = MyBase.Columns("VAC_ORDINE")
            Me.columnNUM_NON_VACCINATI = MyBase.Columns("NUM_NON_VACCINATI")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnMED_CODICE = New Global.System.Data.DataColumn("MED_CODICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_CODICE)
            Me.columnMED_DESCRIZIONE = New Global.System.Data.DataColumn("MED_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_DESCRIZIONE)
            Me.columnNUM_PAZIENTI = New Global.System.Data.DataColumn("NUM_PAZIENTI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUM_PAZIENTI)
            Me.columnvac_codice = New Global.System.Data.DataColumn("VAC_CODICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnvac_codice.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "vac_codice")
            Me.columnvac_codice.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "vac_codiceColumn")
            Me.columnvac_codice.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnvac_codice")
            Me.columnvac_codice.ExtendedProperties.Add("Generator_UserColumnName", "VAC_CODICE")
            MyBase.Columns.Add(Me.columnvac_codice)
            Me.columnVAC_DESCRIZIONE = New Global.System.Data.DataColumn("VAC_DESCRIZIONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAC_DESCRIZIONE)
            Me.columnVAC_ORDINE = New Global.System.Data.DataColumn("VAC_ORDINE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAC_ORDINE)
            Me.columnNUM_NON_VACCINATI = New Global.System.Data.DataColumn("NUM_NON_VACCINATI", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUM_NON_VACCINATI)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMediciRow() As MediciRow
            Return CType(Me.NewRow, MediciRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MediciRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MediciRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MediciRowChangedEvent) Is Nothing) Then
                RaiseEvent MediciRowChanged(Me, New MediciRowChangeEvent(CType(e.Row, MediciRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MediciRowChangingEvent) Is Nothing) Then
                RaiseEvent MediciRowChanging(Me, New MediciRowChangeEvent(CType(e.Row, MediciRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MediciRowDeletedEvent) Is Nothing) Then
                RaiseEvent MediciRowDeleted(Me, New MediciRowChangeEvent(CType(e.Row, MediciRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MediciRowDeletingEvent) Is Nothing) Then
                RaiseEvent MediciRowDeleting(Me, New MediciRowChangeEvent(CType(e.Row, MediciRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMediciRow(ByVal row As MediciRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsNonVaccinatiMedico = New dsNonVaccinatiMedico()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MediciDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FiltriVaccinazioniRow
        Inherits Global.System.Data.DataRow

        Private tableFiltriVaccinazioni As FiltriVaccinazioniDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFiltriVaccinazioni = CType(Me.Table, FiltriVaccinazioniDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VAC_CODICE() As String
            Get
                Try
                    Return CType(Me(Me.tableFiltriVaccinazioni.VAC_CODICEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_CODICE' in table 'FiltriVaccinazioni' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFiltriVaccinazioni.VAC_CODICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VAC_DESCRIZIONE() As String
            Get
                Try
                    Return CType(Me(Me.tableFiltriVaccinazioni.VAC_DESCRIZIONEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_DESCRIZIONE' in table 'FiltriVaccinazioni' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFiltriVaccinazioni.VAC_DESCRIZIONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DOSE() As Integer
            Get
                Try
                    Return CType(Me(Me.tableFiltriVaccinazioni.DOSEColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOSE' in table 'FiltriVaccinazioni' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableFiltriVaccinazioni.DOSEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GIORNI_VITA() As Integer
            Get
                Try
                    Return CType(Me(Me.tableFiltriVaccinazioni.GIORNI_VITAColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GIORNI_VITA' in table 'FiltriVaccinazioni' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableFiltriVaccinazioni.GIORNI_VITAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVAC_CODICENull() As Boolean
            Return Me.IsNull(Me.tableFiltriVaccinazioni.VAC_CODICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVAC_CODICENull()
            Me(Me.tableFiltriVaccinazioni.VAC_CODICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVAC_DESCRIZIONENull() As Boolean
            Return Me.IsNull(Me.tableFiltriVaccinazioni.VAC_DESCRIZIONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVAC_DESCRIZIONENull()
            Me(Me.tableFiltriVaccinazioni.VAC_DESCRIZIONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDOSENull() As Boolean
            Return Me.IsNull(Me.tableFiltriVaccinazioni.DOSEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDOSENull()
            Me(Me.tableFiltriVaccinazioni.DOSEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGIORNI_VITANull() As Boolean
            Return Me.IsNull(Me.tableFiltriVaccinazioni.GIORNI_VITAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGIORNI_VITANull()
            Me(Me.tableFiltriVaccinazioni.GIORNI_VITAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ElencoNonVaccinatiRow
        Inherits Global.System.Data.DataRow

        Private tableElencoNonVaccinati As ElencoNonVaccinatiDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableElencoNonVaccinati = CType(Me.Table, ElencoNonVaccinatiDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property paz_codice() As Long
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.paz_codiceColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_CODICE' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tableElencoNonVaccinati.paz_codiceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property paz_cognome() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.paz_cognomeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_COGNOME' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.paz_cognomeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property paz_nome() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.paz_nomeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_NOME' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.paz_nomeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property paz_data_nascita() As Date
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.paz_data_nascitaColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_DATA_NASCITA' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableElencoNonVaccinati.paz_data_nascitaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property paz_indirizzo_residenza() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.paz_indirizzo_residenzaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_INDIRIZZO_RESIDENZA' in table 'ElencoNonVaccinati' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.paz_indirizzo_residenzaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property com_descrizione() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.com_descrizioneColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COM_DESCRIZIONE' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.com_descrizioneColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property paz_com_codice_residenza() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.paz_com_codice_residenzaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_COM_CODICE_RESIDENZA' in table 'ElencoNonVaccinati' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.paz_com_codice_residenzaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property paz_note() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.paz_noteColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_NOTE' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.paz_noteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAZ_LIBERO_1() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.PAZ_LIBERO_1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_LIBERO_1' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.PAZ_LIBERO_1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property vac_codice() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.vac_codiceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_CODICE' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.vac_codiceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property vac_descrizione() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.vac_descrizioneColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_DESCRIZIONE' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.vac_descrizioneColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VAC_ORDINE() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.VAC_ORDINEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_ORDINE' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.VAC_ORDINEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOE_DESCRIZIONE() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.MOE_DESCRIZIONEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOE_DESCRIZIONE' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.MOE_DESCRIZIONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property INADEMPIENZA() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.INADEMPIENZAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INADEMPIENZA' in table 'ElencoNonVaccinati' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.INADEMPIENZAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PAZ_MED_CODICE_BASE() As String
            Get
                Try
                    Return CType(Me(Me.tableElencoNonVaccinati.PAZ_MED_CODICE_BASEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAZ_MED_CODICE_BASE' in table 'ElencoNonVaccinati' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableElencoNonVaccinati.PAZ_MED_CODICE_BASEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ispaz_codiceNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.paz_codiceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setpaz_codiceNull()
            Me(Me.tableElencoNonVaccinati.paz_codiceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ispaz_cognomeNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.paz_cognomeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setpaz_cognomeNull()
            Me(Me.tableElencoNonVaccinati.paz_cognomeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ispaz_nomeNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.paz_nomeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setpaz_nomeNull()
            Me(Me.tableElencoNonVaccinati.paz_nomeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ispaz_data_nascitaNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.paz_data_nascitaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setpaz_data_nascitaNull()
            Me(Me.tableElencoNonVaccinati.paz_data_nascitaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ispaz_indirizzo_residenzaNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.paz_indirizzo_residenzaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setpaz_indirizzo_residenzaNull()
            Me(Me.tableElencoNonVaccinati.paz_indirizzo_residenzaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Iscom_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.com_descrizioneColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setcom_descrizioneNull()
            Me(Me.tableElencoNonVaccinati.com_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ispaz_com_codice_residenzaNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.paz_com_codice_residenzaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setpaz_com_codice_residenzaNull()
            Me(Me.tableElencoNonVaccinati.paz_com_codice_residenzaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Ispaz_noteNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.paz_noteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setpaz_noteNull()
            Me(Me.tableElencoNonVaccinati.paz_noteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPAZ_LIBERO_1Null() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.PAZ_LIBERO_1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPAZ_LIBERO_1Null()
            Me(Me.tableElencoNonVaccinati.PAZ_LIBERO_1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isvac_codiceNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.vac_codiceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setvac_codiceNull()
            Me(Me.tableElencoNonVaccinati.vac_codiceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isvac_descrizioneNull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.vac_descrizioneColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setvac_descrizioneNull()
            Me(Me.tableElencoNonVaccinati.vac_descrizioneColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVAC_ORDINENull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.VAC_ORDINEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVAC_ORDINENull()
            Me(Me.tableElencoNonVaccinati.VAC_ORDINEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOE_DESCRIZIONENull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.MOE_DESCRIZIONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOE_DESCRIZIONENull()
            Me(Me.tableElencoNonVaccinati.MOE_DESCRIZIONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsINADEMPIENZANull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.INADEMPIENZAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetINADEMPIENZANull()
            Me(Me.tableElencoNonVaccinati.INADEMPIENZAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPAZ_MED_CODICE_BASENull() As Boolean
            Return Me.IsNull(Me.tableElencoNonVaccinati.PAZ_MED_CODICE_BASEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPAZ_MED_CODICE_BASENull()
            Me(Me.tableElencoNonVaccinati.PAZ_MED_CODICE_BASEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MediciRow
        Inherits Global.System.Data.DataRow

        Private tableMedici As MediciDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMedici = CType(Me.Table, MediciDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MED_CODICE() As String
            Get
                Try
                    Return CType(Me(Me.tableMedici.MED_CODICEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_CODICE' in table 'Medici' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMedici.MED_CODICEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MED_DESCRIZIONE() As String
            Get
                Try
                    Return CType(Me(Me.tableMedici.MED_DESCRIZIONEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_DESCRIZIONE' in table 'Medici' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMedici.MED_DESCRIZIONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUM_PAZIENTI() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMedici.NUM_PAZIENTIColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUM_PAZIENTI' in table 'Medici' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMedici.NUM_PAZIENTIColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property vac_codice() As String
            Get
                Try
                    Return CType(Me(Me.tableMedici.vac_codiceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_CODICE' in table 'Medici' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMedici.vac_codiceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VAC_DESCRIZIONE() As String
            Get
                Try
                    Return CType(Me(Me.tableMedici.VAC_DESCRIZIONEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_DESCRIZIONE' in table 'Medici' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMedici.VAC_DESCRIZIONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VAC_ORDINE() As String
            Get
                Try
                    Return CType(Me(Me.tableMedici.VAC_ORDINEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC_ORDINE' in table 'Medici' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableMedici.VAC_ORDINEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUM_NON_VACCINATI() As Integer
            Get
                Try
                    Return CType(Me(Me.tableMedici.NUM_NON_VACCINATIColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUM_NON_VACCINATI' in table 'Medici' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableMedici.NUM_NON_VACCINATIColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMED_CODICENull() As Boolean
            Return Me.IsNull(Me.tableMedici.MED_CODICEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMED_CODICENull()
            Me(Me.tableMedici.MED_CODICEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMED_DESCRIZIONENull() As Boolean
            Return Me.IsNull(Me.tableMedici.MED_DESCRIZIONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMED_DESCRIZIONENull()
            Me(Me.tableMedici.MED_DESCRIZIONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUM_PAZIENTINull() As Boolean
            Return Me.IsNull(Me.tableMedici.NUM_PAZIENTIColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUM_PAZIENTINull()
            Me(Me.tableMedici.NUM_PAZIENTIColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Isvac_codiceNull() As Boolean
            Return Me.IsNull(Me.tableMedici.vac_codiceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Setvac_codiceNull()
            Me(Me.tableMedici.vac_codiceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVAC_DESCRIZIONENull() As Boolean
            Return Me.IsNull(Me.tableMedici.VAC_DESCRIZIONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVAC_DESCRIZIONENull()
            Me(Me.tableMedici.VAC_DESCRIZIONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVAC_ORDINENull() As Boolean
            Return Me.IsNull(Me.tableMedici.VAC_ORDINEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVAC_ORDINENull()
            Me(Me.tableMedici.VAC_ORDINEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUM_NON_VACCINATINull() As Boolean
            Return Me.IsNull(Me.tableMedici.NUM_NON_VACCINATIColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUM_NON_VACCINATINull()
            Me(Me.tableMedici.NUM_NON_VACCINATIColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FiltriVaccinazioniRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FiltriVaccinazioniRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FiltriVaccinazioniRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FiltriVaccinazioniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ElencoNonVaccinatiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ElencoNonVaccinatiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ElencoNonVaccinatiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ElencoNonVaccinatiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MediciRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MediciRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MediciRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MediciRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
